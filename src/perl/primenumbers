#!/usr/bin/perl -w
#
#    Straight Perl version of prime number tests in misc languages
#    Copyright (C) 2002 Sebastian D.B. Krause <krause@sdbk.de>
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

use integer;
$MAX = 2**16;

main();

sub sqrt_
{
    my($x) = @_;

    if ($x <= 0) { return 0; }
    $i = $x/2;
    while (1) {
	$l = $i;
	$i = ($l + $x/$l)/2;
	if (abs($l-$i) <= 1) {
	    return ($i+$x/$i)/2;
	}
    }
}

sub main
{
    @p = 0 x $MAX;
    $p[0] = 2;
    $p[1] = 3;

    for ($n=2; $n<$MAX; ++$n) {
	$p[$n] = $p[$n-1] + 2;
	$k = 1;
	$s = sqrt_($p[$n]);
	while (($k<$n) && ($p[$k] <= $s))
	{
	    if (($p[$n] % $p[$k]) == 0) {
		$p[$n] += 2;
		$s = sqrt_($p[$n]);
		$k = 1;
	    } else {
		++$k;
	    }
	}
    }

    for ($n=0; $n<$MAX; ++$n) {
	print $n, " ", $p[$n], "\n";
    }
}
